{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red191\green100\blue38;\red32\green32\blue32;\red153\green168\blue186;
\red254\green187\blue91;\red117\green114\blue185;\red88\green118\blue71;\red152\green54\blue29;\red86\green132\blue173;
}
{\*\expandedcolortbl;;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c60000\c65882\c72941;
\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c45882\c44706\c72549;\csgenericrgb\c34510\c46275\c27843;\csgenericrgb\c59608\c21176\c11373;\csgenericrgb\c33725\c51765\c67843;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 import \cf4 pandas \cf2 as \cf4 pd\
\cf2 import \cf4 re\
\
\
\cf2 def \cf5 add_feature_bool_contains\cf4 (df\cf2 , \cf4 col_name\cf2 , \cf4 matches_list\cf2 , \cf4 new_col_name\cf2 , \cf4 new_pos):\
    feat_list = []\
    \cf2 for \cf4 index\cf2 , \cf4 row \cf2 in \cf4 df.iterrows():\
        result_boolean = \cf6 any\cf4 (re.search(s\cf2 , \cf4 row[col_name]) \cf2 for \cf4 s \cf2 in \cf4 matches_list)\
        \cf2 if \cf4 result_boolean:\
            result = \cf7 "T"\
        \cf2 else\cf4 :\
            result = \cf7 "F"\
        \cf4 feat_list.append(result)\
    df.insert(\cf8 loc\cf4 =new_pos\cf2 , \cf8 column\cf4 =new_col_name\cf2 , \cf8 value\cf4 =feat_list)\
\
\
\cf2 def \cf5 occurence_count\cf4 (df\cf2 , \cf4 col_name\cf2 , \cf4 val):\
    occurence_count = \cf9 0\
    \cf2 for \cf4 index\cf2 , \cf4 row \cf2 in \cf4 df.iterrows():\
        \cf2 if \cf4 val \cf2 in \cf4 row[col_name]:\
            occurence_count += \cf9 1\
    \cf2 return \cf4 occurence_count\
\
df = pd.read_csv(\cf7 '/Users/clemencegranade/Documents/COMP 598/Assigmnents/Ass1/Collected_Tweets.tsv'\cf2 , \cf8 sep\cf4 =\cf7 '\cf2 \\t\cf7 '\cf4 )\
df_sel = df[[\cf7 'tweet_id'\cf2 , \cf7 'publish_date'\cf2 , \cf7 'content'\cf4 ]]\
\
matches = [\cf7 '^Trump'\cf2 , \cf7 'Trump$'\cf2 , \cf7 '[^A-z0-9]Trump[^A-z0-9]'\cf4 ]\
add_feature_bool_contains(df_sel\cf2 , \cf7 'content'\cf2 , \cf4 matches\cf2 , \cf7 'trump_mention'\cf2 , \cf9 3\cf4 )\
\
df_sel.to_csv(\cf8 path_or_buf\cf4 =\cf7 '/Users/clemencegranade/Documents/COMP 598/Assigmnents/Ass1/dataset.tsv'\cf2 ,\
              \cf8 index\cf4 =\cf2 False, \cf8 sep\cf4 =\cf7 '\cf2 \\t\cf7 '\cf4 )\
\
\
nb_trump_mentions = occurence_count(df_sel\cf2 , \cf7 'trump_mention'\cf2 , \cf7 'T'\cf4 )\
frac_trump_mentions = nb_trump_mentions / df_sel.shape[\cf9 0\cf4 ]\
\
df_result = pd.DataFrame(\{\cf7 'result'\cf4 : [\cf7 'frac_trump_mentions'\cf4 ]\cf2 , \cf7 'value'\cf4 :[frac_trump_mentions\cf2 ,\cf4 ]\})\
df_result.to_csv(\cf8 path_or_buf\cf4 =\cf7 '/Users/clemencegranade/Documents/COMP 598/Assigmnents/Ass1/results.tsv'\cf2 ,\
              \cf8 index\cf4 =\cf2 False, \cf8 sep\cf4 =\cf7 '\cf2 \\t\cf7 '\cf4 )\
}